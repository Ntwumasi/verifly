version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: verifly-postgres
    environment:
      POSTGRES_DB: verifly_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - verifly

  # Redis (for job queues and caching)
  redis:
    image: redis:7
    container_name: verifly-redis
    ports:
      - "6379:6379"
    networks:
      - verifly

  # MailHog (for email testing in development)
  mailhog:
    image: mailhog/mailhog
    container_name: verifly-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - verifly

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: verifly-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/verifly_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-change-in-production
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - verifly
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: verifly-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - verifly
    command: npm run dev

volumes:
  postgres_data:

networks:
  verifly:
    driver: bridge